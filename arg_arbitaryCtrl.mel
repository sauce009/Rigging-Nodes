global proc string arg_arbitaryCtrl(string $jnt[], string $name[], float $doCon)
{
	string $list[] = $jnt;
	string $basename[];
	string $conGrp;
	string $offGrp;
	string $modGrp;
	for($i=0; $i<size($jnt); $i++)
	{
		$basename[$i] = basename( $jnt[$i], "_JNT" );
		if(`objExists ($basename[$i] + "_CTRL")`)
		{
			
		}
		else
		{
			string $ctrl[] = `circle -c 0 0 0 -nr 0 1 0 -r 0.25 -d 1 -s 8 -ch 0 -n ( $basename[$i] + "_CTRL" )`;
			$conGrp = `group -em -n ( $basename[$i] + "_Con_GRP" )`;
			$offGrp = `group -em -n ( $basename[$i] + "_Offset_GRP" )`;
			$modGrp = `group -em -n ( $basename[$i] + "_Modify_GRP" )`;
			parent ($conGrp) ($ctrl);
			parent ($modGrp) ($offGrp);
			parent ($ctrl) ($modGrp);
			string $con[] = `parentConstraint ($jnt[$i]) ($offGrp)`;
			delete $con;
			select -r ($basename[$i] + "_Offset_GRP");
			searchReplaceNames ($basename[$i]) ($name[$i]) "hierarchy";
			if($doCon == 1)
			{
				pointConstraint -mo ($name[$i] + "_Con_GRP") $jnt;
			}
			else
			{

			}
			if($doCon == 2)
			{
				orientConstraint -mo ($name[$i] + "_Con_GRP") $jnt;
			}
			else
			{
				
			}
			if($doCon == 3)
			{
				scaleConstraint -mo ($name[$i] + "_Con_GRP") $jnt;
			}
			else
			{
				
			}
			if($doCon == 4)
			{
				parentConstraint -mo ($name[$i] + "_Con_GRP") $jnt;
			}
			else
			{
				
			}
			if($doCon == 5)
			{
				parentConstraint -mo ($name[$i] + "_Con_GRP") $jnt;
				scaleConstraint -mo ($name[$i] + "_Con_GRP") $jnt;
			}
			else
			{
				
			}
		}
	}
	
	return "arg_arbitaryCtrl";
}